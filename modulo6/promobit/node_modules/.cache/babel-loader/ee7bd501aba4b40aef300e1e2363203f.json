{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mariana\\\\Desktop\\\\Mayra-Dias\\\\modulo6\\\\promobit\\\\src\\\\hooks\\\\MoviesContext.jsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useEffect, useState } from \"react\";\nimport { api } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MoviesContext = /*#__PURE__*/createContext([]);\nexport function MoviesProvider(props) {\n  _s();\n\n  const [movies, setMovies] = useState([]);\n  const [genres, setGenres] = useState([]);\n  const [filters, setFilters] = useState([]);\n  const [filteredMovies, setFilteredMovies] = useState([]);\n  const [page, setPage] = useState(1);\n  useEffect(() => {\n    try {\n      api.get(`movie/popular?api_key=ca4b9689443e16a5eaca9c48c71bed7e&language=pt-BR&page=${page}`).then(response => setMovies(response.data.results));\n      api.get('genre/movie/list?api_key=ca4b9689443e16a5eaca9c48c71bed7e&language=pt-BR').then(response => setGenres(response.data.genres)); // console.log(movies);\n    } catch (error) {\n      console.log(error);\n    }\n  }, [page]);\n  useEffect(() => {\n    try {\n      let filteredMovies = [];\n      movies.map(movie => {\n        for (let filter of filters) {\n          if (movie.genre_ids.includes(filter)) {\n            filteredMovies = [...filteredMovies, movie];\n            break;\n          }\n        }\n      });\n      setFilteredMovies(filteredMovies); // console.log(filteredMovies);\n    } catch (error) {\n      console.log(error);\n    }\n  }, [filters]);\n\n  function handleFilterGenres(genre) {\n    if (filters.includes(genre)) {\n      const index = filters.indexOf(genre);\n\n      if (index == 0) {\n        setFilters([...filters.slice(index + 1)]);\n      } else {\n        setFilters([...filters.slice(0, index), ...filters.slice(index + 1)]);\n      }\n    } else {\n      setFilters([...filters, genre]);\n    } // console.log(filters);\n\n  }\n\n  return /*#__PURE__*/_jsxDEV(MoviesContext.Provider, {\n    value: {\n      genres,\n      movies,\n      filters,\n      filteredMovies,\n      setPage,\n      handleFilterGenres\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MoviesProvider, \"vm7HyfgiuILW6GPEbCfnKPo4IBE=\");\n\n_c = MoviesProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"MoviesProvider\");","map":{"version":3,"sources":["C:/Users/Mariana/Desktop/Mayra-Dias/modulo6/promobit/src/hooks/MoviesContext.jsx"],"names":["createContext","useEffect","useState","api","MoviesContext","MoviesProvider","props","movies","setMovies","genres","setGenres","filters","setFilters","filteredMovies","setFilteredMovies","page","setPage","get","then","response","data","results","error","console","log","map","movie","filter","genre_ids","includes","handleFilterGenres","genre","index","indexOf","slice","children"],"mappings":"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","sourcesContent":["import { createContext, useEffect, useState } from \"react\"\r\nimport { api } from '../services/api';\r\n\r\nexport const MoviesContext = createContext([]);\r\n\r\nexport function MoviesProvider(props) {\r\n    const [movies, setMovies] = useState([]);\r\n    const [genres, setGenres] = useState([]);\r\n    const [filters, setFilters] = useState([]);\r\n    const [filteredMovies, setFilteredMovies] = useState([]);\r\n\r\n    const [page, setPage] = useState(1);\r\n\r\n    useEffect(() => {\r\n        try {\r\n            api.get(`movie/popular?api_key=ca4b9689443e16a5eaca9c48c71bed7e&language=pt-BR&page=${page}`)\r\n            .then(response => setMovies(response.data.results))\r\n        \r\n            api.get('genre/movie/list?api_key=ca4b9689443e16a5eaca9c48c71bed7e&language=pt-BR')\r\n            .then(response => setGenres(response.data.genres)); \r\n            // console.log(movies);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n        \r\n    }, [page]);\r\n\r\n    useEffect(() => {\r\n        try {\r\n            let filteredMovies = [];\r\n\r\n            movies.map(movie => {\r\n                for(let filter of filters) {\r\n                    if (movie.genre_ids.includes(filter)) {\r\n                        filteredMovies = [...filteredMovies , movie];\r\n                        break\r\n                    }\r\n                }\r\n            })\r\n            setFilteredMovies(filteredMovies);\r\n            // console.log(filteredMovies);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n        \r\n    }, [filters]);\r\n\r\n    function handleFilterGenres(genre) {\r\n       if (filters.includes(genre)){\r\n            const index = filters.indexOf(genre);\r\n\r\n            if (index == 0) {\r\n                setFilters([...filters.slice(index + 1)]);\r\n            } else {\r\n                setFilters([...filters.slice(0, index), ...filters.slice(index + 1)])\r\n            }\r\n        } else {\r\n            setFilters([...filters, genre])\r\n        }    \r\n        // console.log(filters);\r\n    }\r\n\r\n    return (\r\n        <MoviesContext.Provider\r\n            value={{\r\n                genres,\r\n                movies,\r\n                filters,\r\n                filteredMovies,\r\n                setPage,\r\n                handleFilterGenres\r\n            }}\r\n        >\r\n            {props.children}\r\n        </MoviesContext.Provider>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}
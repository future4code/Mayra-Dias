[{"C:\\Users\\Mariana\\Desktop\\Mayra-Dias\\modulo6\\promobit\\src\\index.js":"1","C:\\Users\\Mariana\\Desktop\\Mayra-Dias\\modulo6\\promobit\\src\\App.js":"2","C:\\Users\\Mariana\\Desktop\\Mayra-Dias\\modulo6\\promobit\\src\\styles\\global.js":"3","C:\\Users\\Mariana\\Desktop\\Mayra-Dias\\modulo6\\promobit\\src\\services\\api.js":"4","C:\\Users\\Mariana\\Desktop\\Mayra-Dias\\modulo6\\promobit\\src\\components\\Header\\styles.js":"5","C:\\Users\\Mariana\\Desktop\\Mayra-Dias\\modulo6\\promobit\\src\\pages\\MovieList\\styles.js":"6","C:\\Users\\Mariana\\Desktop\\Mayra-Dias\\modulo6\\promobit\\src\\pages\\MovieDetails\\styles.js":"7","C:\\Users\\Mariana\\Desktop\\Mayra-Dias\\modulo6\\promobit\\src\\pages\\GenresFilter\\styles.js":"8","C:\\Users\\Mariana\\Desktop\\Mayra-Dias\\modulo6\\promobit\\src\\components\\CardMovie\\styles.js":"9","C:\\Users\\Mariana\\Desktop\\Mayra-Dias\\modulo6\\promobit\\src\\hooks\\MoviesContext.js":"10","C:\\Users\\Mariana\\Desktop\\Mayra-Dias\\modulo6\\promobit\\src\\pages\\GenresFilter\\index.js":"11","C:\\Users\\Mariana\\Desktop\\Mayra-Dias\\modulo6\\promobit\\src\\pages\\MovieDetails\\index.js":"12","C:\\Users\\Mariana\\Desktop\\Mayra-Dias\\modulo6\\promobit\\src\\pages\\MovieList\\index.js":"13","C:\\Users\\Mariana\\Desktop\\Mayra-Dias\\modulo6\\promobit\\src\\components\\CardMovie\\index.js":"14","C:\\Users\\Mariana\\Desktop\\Mayra-Dias\\modulo6\\promobit\\src\\components\\Header\\index.js":"15"},{"size":307,"mtime":1649524141895,"results":"16","hashOfConfig":"17"},{"size":611,"mtime":1649524141864,"results":"18","hashOfConfig":"17"},{"size":1312,"mtime":1649524141912,"results":"19","hashOfConfig":"17"},{"size":113,"mtime":1649524141910,"results":"20","hashOfConfig":"17"},{"size":200,"mtime":1649524141891,"results":"21","hashOfConfig":"17"},{"size":1072,"mtime":1649524141909,"results":"22","hashOfConfig":"17"},{"size":4233,"mtime":1649524141900,"results":"23","hashOfConfig":"17"},{"size":1284,"mtime":1649524141898,"results":"24","hashOfConfig":"17"},{"size":534,"mtime":1649524141883,"results":"25","hashOfConfig":"17"},{"size":2352,"mtime":1649529677030,"results":"26","hashOfConfig":"17"},{"size":1311,"mtime":1649524141897,"results":"27","hashOfConfig":"17"},{"size":7691,"mtime":1649529748770,"results":"28","hashOfConfig":"17"},{"size":2730,"mtime":1649524141908,"results":"29","hashOfConfig":"17"},{"size":855,"mtime":1649524141873,"results":"30","hashOfConfig":"17"},{"size":272,"mtime":1649524141884,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1xbzvww",{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Mariana\\Desktop\\Mayra-Dias\\modulo6\\promobit\\src\\index.js",[],[],"C:\\Users\\Mariana\\Desktop\\Mayra-Dias\\modulo6\\promobit\\src\\App.js",["81"],[],"import { MoviesProvider } from \"./hooks/MoviesContext\";\r\nimport { Routes, Route,Link } from 'react-router-dom';\r\n\r\nimport { GlobalStyle } from \"./styles/global\";\r\n\r\nimport { Header } from \"./components/Header\";\r\nimport { MovieList } from \"./pages/MovieList\";\r\nimport { MovieDetails } from \"./pages/MovieDetails\";\r\n\r\nexport function App() {\r\n  return (\r\n    <MoviesProvider>\r\n      <Header />\r\n        <Routes>\r\n          <Route path='/' element={<MovieList />} />\r\n          <Route path='/moviedetails/:id' element={<MovieDetails />}/>\r\n        </Routes>\r\n      <GlobalStyle />\r\n    </MoviesProvider>\r\n  );\r\n}\r\n","C:\\Users\\Mariana\\Desktop\\Mayra-Dias\\modulo6\\promobit\\src\\styles\\global.js",[],[],"C:\\Users\\Mariana\\Desktop\\Mayra-Dias\\modulo6\\promobit\\src\\services\\api.js",[],[],"C:\\Users\\Mariana\\Desktop\\Mayra-Dias\\modulo6\\promobit\\src\\components\\Header\\styles.js",[],[],"C:\\Users\\Mariana\\Desktop\\Mayra-Dias\\modulo6\\promobit\\src\\pages\\MovieList\\styles.js",[],[],"C:\\Users\\Mariana\\Desktop\\Mayra-Dias\\modulo6\\promobit\\src\\pages\\MovieDetails\\styles.js",[],[],"C:\\Users\\Mariana\\Desktop\\Mayra-Dias\\modulo6\\promobit\\src\\pages\\GenresFilter\\styles.js",[],[],"C:\\Users\\Mariana\\Desktop\\Mayra-Dias\\modulo6\\promobit\\src\\components\\CardMovie\\styles.js",[],[],"C:\\Users\\Mariana\\Desktop\\Mayra-Dias\\modulo6\\promobit\\src\\hooks\\MoviesContext.js",["82","83","84"],[],"import { createContext, useEffect, useState } from \"react\"\r\nimport { api } from '../services/api';\r\n\r\nexport const MoviesContext = createContext([]);\r\n\r\nexport function MoviesProvider(props) {\r\n    const [movies, setMovies] = useState([]);\r\n    const [genres, setGenres] = useState([]);\r\n    const [filters, setFilters] = useState([]);\r\n    const [filteredMovies, setFilteredMovies] = useState([]);\r\n\r\n    const [page, setPage] = useState(1);\r\n\r\n    useEffect(() => {\r\n        try {\r\n            api.get(`movie/popular?api_key=ca4b9689443e16a5eaca9c48c71bed7e&language=pt-BR&page=${page}`)\r\n            .then(response => setMovies(response.data.results))\r\n        \r\n            api.get('genre/movie/list?api_key=ca4b9689443e16a5eaca9c48c71bed7e&language=pt-BR')\r\n            .then(response => setGenres(response.data.genres)); \r\n            // console.log(movies);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n        \r\n    }, [page]);\r\n\r\n    useEffect(() => {\r\n        try {\r\n            let filteredMovies = [];\r\n\r\n            movies.map(movie => {\r\n                for(let filter of filters) {\r\n                    if (movie.genre_ids.includes(filter)) {\r\n                        filteredMovies = [...filteredMovies , movie];\r\n                        break\r\n                    }\r\n                }\r\n            })\r\n            setFilteredMovies(filteredMovies);\r\n            // console.log(filteredMovies);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n        \r\n    }, [filters]);\r\n\r\n    function handleFilterGenres(genre) {\r\n       if (filters.includes(genre)){\r\n            const index = filters.indexOf(genre);\r\n\r\n            if (index == 0) {\r\n                setFilters([...filters.slice(index + 1)]);\r\n            } else {\r\n                setFilters([...filters.slice(0, index), ...filters.slice(index + 1)])\r\n            }\r\n        } else {\r\n            setFilters([...filters, genre])\r\n        }    \r\n        // console.log(filters);\r\n    }\r\n\r\n    return (\r\n        <MoviesContext.Provider\r\n            value={{\r\n                genres,\r\n                movies,\r\n                filters,\r\n                filteredMovies,\r\n                setPage,\r\n                handleFilterGenres\r\n            }}\r\n        >\r\n            {props.children}\r\n        </MoviesContext.Provider>\r\n    );\r\n}","C:\\Users\\Mariana\\Desktop\\Mayra-Dias\\modulo6\\promobit\\src\\pages\\GenresFilter\\index.js",[],[],"C:\\Users\\Mariana\\Desktop\\Mayra-Dias\\modulo6\\promobit\\src\\pages\\MovieDetails\\index.js",["85","86","87","88","89"],[],"import { \r\n    Container,\r\n    Content,\r\n    MovieCover,\r\n    MovieDetail,\r\n    TitleMovie,\r\n    InfoMovie,\r\n    Assessment,\r\n    ImageAssessment,\r\n    Synopsis,\r\n    TextSynopsis, \r\n    PeopleMovieContainer,\r\n    PeopleMovieContent,\r\n    TitlePeople,\r\n    InfoPeople,\r\n    ContentMidia,\r\n    CastTitle,\r\n    CastContainer,\r\n    CastCard,\r\n    NameCast,\r\n    NameCharacter,\r\n    TrailerTitle,\r\n    MovieTrailer,\r\n    RecommendationsTitle,\r\n    MovieRecommendationsContainer,\r\n} from \"./styles\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { api } from \"../../services/api\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\n\r\nimport { CardMovie } from \"../../components/CardMovie\";\r\nimport { CircularProgressbar,buildStyles } from 'react-circular-progressbar';\r\nimport { getYear,format } from \"date-fns\";\r\n\r\nimport 'react-circular-progressbar/dist/styles.css';\r\nimport ReactPlayer from 'react-player/youtube';\r\n\r\nimport imgNotFound from '../../assets/notfound.png';\r\nimport imgVideoNotFound from '../../assets/videonotfound.png';\r\n\r\nexport function MovieDetails(props) {\r\n    const { id }  = useParams();    \r\n    const [movieDetails, setMovieDetails] = useState([]);\r\n    const [movieCurrent, setMovieCurrent] = useState([]);\r\n    const [movieRecommendations, setMovieRecommendations] = useState([]);\r\n    const [realeseDate,setRealeaseDate] = useState({});\r\n    const [castInfo, setCastInfo] = useState([]);\r\n    const [crewInfo, setCrewInfo] = useState([]);\r\n    \r\n    useEffect(async () => {\r\n        try {\r\n            await api.get(`movie/${id}?api_key=ca4b9689443e16a5eaca9c48c71bed7e&append_to_response=videos&language=pt-BR`)\r\n            .then(response => setMovieDetails((response.data)))\r\n            \r\n            await api.get(`movie/${id}/release_dates?api_key=ca4b9689443e16a5eaca9c48c71bed7e`)\r\n            .then(response => {\r\n                const data = response.data.results;\r\n                \r\n                for(let obj of data) {\r\n                    if (obj.iso_3166_1 == \"BR\") {\r\n                        // console.log(obj)\r\n                        setRealeaseDate(obj)\r\n                        break\r\n                    }\r\n                }\r\n            })\r\n            \r\n            await api.get(`movie/${id}/credits?api_key=ca4b9689443e16a5eaca9c48c71bed7e&language=pt-BR`)\r\n            .then(response => setCastInfo(response.data.cast))\r\n\r\n            await api.get(`movie/${id}/credits?api_key=ca4b9689443e16a5eaca9c48c71bed7e&language=pt-BR`)\r\n            .then(response => {\r\n                const data = response.data.crew\r\n                let filteredData = [];\r\n\r\n                for(let obj of data) {\r\n                    if ([\"Characters\",\"Director\",\"Writer\"].includes(obj.job)) {\r\n                        filteredData.push(obj);\r\n                    }\r\n                }\r\n                setCrewInfo(filteredData);\r\n            })\r\n\r\n            await api.get(`movie/${id}/recommendations?api_key=ca4b9689443e16a5eaca9c48c71bed7e&language=en-US&page=1`)\r\n            .then(response => setMovieRecommendations(response.data.results))\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n            \r\n    }, [movieCurrent]);\r\n    \r\n    const {title,poster_path,vote_average,release_date,runtime ,genres, videos} = movieDetails;\r\n\r\n    const dateFormated = release_date ? format(new Date(release_date), \"dd/MM/yyyy\") : \"\";\r\n    const year = release_date ? getYear(new Date(release_date)): \"\";\r\n    const movieHour = runtime ? Math.floor(runtime/60) : \"\";\r\n    const movieMin = runtime ? runtime % 60 : \"\";\r\n\r\n    return (\r\n        <Container>\r\n            <Content>\r\n            <MovieCover src={`https://image.tmdb.org/t/p/original/${poster_path}`} alt={title} />\r\n            <MovieDetail>\r\n                <TitleMovie>{title} ({year})</TitleMovie>\r\n                <InfoMovie> \r\n                    {realeseDate && realeseDate.iso_3166_1 ? realeseDate.release_dates[0].certification : \"\"} anos \r\n                    * \r\n                    {dateFormated} *  (BR)  * \r\n                    {genres ? genres.map((genre, index) => (` ${genre.name}${index + 1 === genres.length ? \" \" : \", \"}`)): \"\"}* \r\n                    {movieHour}h {movieMin}m\r\n                </InfoMovie>\r\n                <Assessment>\r\n                    <div style={{ width: 65, height: 65 }}>\r\n                        <CircularProgressbar \r\n                            value={vote_average / 100} \r\n                            maxValue={1} \r\n                            text={`${vote_average * 10}%`} \r\n                            styles={buildStyles({\r\n                                pathColor: '#FFF',\r\n                                textColor: '#14FF00',\r\n                                trailColor: '#14FF00',\r\n                                backgroundColor: '#14FF00',\r\n                            })}\r\n                        \r\n                        />   \r\n                    </div>\r\n                    <p>Avaliação dos <br /> usuários</p>\r\n                </Assessment>\r\n            \r\n                <Synopsis>Sinopse</Synopsis>\r\n                <TextSynopsis>{movieDetails ? movieDetails.overview : \"Não encontrado\"}</TextSynopsis>\r\n            \r\n                    <PeopleMovieContainer>\r\n                        {\r\n                            crewInfo.map(crew => (\r\n                                <PeopleMovieContent key={crew.id}>\r\n                                    <TitlePeople>{crew.name}</TitlePeople>\r\n                                    <InfoPeople>{crew.job}</InfoPeople>\r\n                                </PeopleMovieContent>\r\n                            ))\r\n                        }\r\n\r\n                    </PeopleMovieContainer>\r\n\r\n            </MovieDetail> \r\n            </Content>\r\n            <ContentMidia>\r\n            <CastTitle>Elenco original</CastTitle>   \r\n            <CastContainer>\r\n                {\r\n                    castInfo.map(cast => (\r\n                        <CastCard key={cast.id}>\r\n                        <img src={cast.profile_path === null ? imgNotFound : `https://image.tmdb.org/t/p/original/${cast.profile_path}`} alt={cast.name} />\r\n                        <NameCast>{cast.name}</NameCast>\r\n                        <NameCharacter>{cast.character}</NameCharacter>\r\n                        </CastCard>\r\n                    ))\r\n                }\r\n            </CastContainer>\r\n            <TrailerTitle>\r\n                Trailer\r\n            </TrailerTitle>\r\n\r\n            <MovieTrailer>\r\n                {videos && videos.results.length ? (\r\n                    <ReactPlayer width='100%' height='100%' url={`https://www.youtube.com/watch?v=${videos ? videos.results[0].key : \"\"}`} controls={true} />\r\n                ) : (\r\n                    <>\r\n                        <img src={imgVideoNotFound} />\r\n                    </>\r\n                )}\r\n            </MovieTrailer>\r\n\r\n            <RecommendationsTitle>Recomendações</RecommendationsTitle>\r\n            <MovieRecommendationsContainer>\r\n               {\r\n                    movieRecommendations.map(movie => (\r\n                    <Link style={{textDecoration:'none'}} onClick={() => setMovieCurrent(movie.id)} key={movie.id} to={`/moviedetails/${movie.id}`}>\r\n                        <CardMovie \r\n                            title={movie.title} \r\n                            imagePath={movie.poster_path} \r\n                            dateRelease={movie.release_date} \r\n                        >\r\n                        </CardMovie>\r\n                    </Link>\r\n                    ))\r\n               }\r\n            </MovieRecommendationsContainer>\r\n            </ContentMidia>\r\n        </Container>\r\n    )\r\n}","C:\\Users\\Mariana\\Desktop\\Mayra-Dias\\modulo6\\promobit\\src\\pages\\MovieList\\index.js",[],[],"C:\\Users\\Mariana\\Desktop\\Mayra-Dias\\modulo6\\promobit\\src\\components\\CardMovie\\index.js",["90"],[],"import {Card, TitleMovie, DateMovie} from './styles';\r\nimport { format } from 'date-fns';\r\nimport { ptBR } from 'date-fns/esm/locale';\r\nimport imgNotFound from '../../assets/notfound.png';\r\nexport function CardMovie(props) {\r\n    return (\r\n        <Card>\r\n            {props.imagePath ? (\r\n                <img src={`https://image.tmdb.org/t/p/original/${props.imagePath ? props.imagePath : \"\"}`} alt={props.title} />\r\n            ) : (\r\n                <img src={imgNotFound}  />\r\n            )}\r\n            <TitleMovie>{props.title? props.title : \"\"}</TitleMovie> \r\n            <DateMovie>\r\n            {\r\n             props.dateRelease ? format(\r\n                  new Date(props.dateRelease),\r\n                  \"dd MMM yyyy\",\r\n                  {locale: ptBR}\r\n              ) : \"\"\r\n            }\r\n            </DateMovie>\r\n        </Card>\r\n    )\r\n}","C:\\Users\\Mariana\\Desktop\\Mayra-Dias\\modulo6\\promobit\\src\\components\\Header\\index.js",[],[],{"ruleId":"91","severity":1,"message":"92","line":2,"column":24,"nodeType":"93","messageId":"94","endLine":2,"endColumn":28},{"ruleId":"95","severity":1,"message":"96","line":32,"column":30,"nodeType":"97","messageId":"98","endLine":32,"endColumn":32},{"ruleId":"99","severity":1,"message":"100","line":46,"column":8,"nodeType":"101","endLine":46,"endColumn":17,"suggestions":"102"},{"ruleId":"103","severity":1,"message":"104","line":52,"column":23,"nodeType":"105","messageId":"106","endLine":52,"endColumn":25},{"ruleId":"91","severity":1,"message":"107","line":9,"column":5,"nodeType":"93","messageId":"94","endLine":9,"endColumn":20},{"ruleId":"99","severity":1,"message":"108","line":50,"column":15,"nodeType":"97","endLine":90,"endColumn":6},{"ruleId":"103","severity":1,"message":"104","line":60,"column":40,"nodeType":"105","messageId":"106","endLine":60,"endColumn":42},{"ruleId":"99","severity":1,"message":"109","line":90,"column":8,"nodeType":"101","endLine":90,"endColumn":22,"suggestions":"110"},{"ruleId":"111","severity":1,"message":"112","line":169,"column":25,"nodeType":"113","endLine":169,"endColumn":55},{"ruleId":"111","severity":1,"message":"112","line":11,"column":17,"nodeType":"113","endLine":11,"endColumn":43},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'movies'. Either include it or remove the dependency array.","ArrayExpression",["114"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'ImageAssessment' is defined but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["115"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",{"desc":"116","fix":"117"},{"desc":"118","fix":"119"},"Update the dependencies array to be: [filters, movies]",{"range":"120","text":"121"},"Update the dependencies array to be: [id, movieCurrent]",{"range":"122","text":"123"},[1527,1536],"[filters, movies]",[3182,3196],"[id, movieCurrent]"]
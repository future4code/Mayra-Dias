{"version":3,"sources":["global/GlobalStateContext.js","constants/urls.js","hooks/useRequestData.js","global/GlobalState.js","services/getContestResult.js","pages/Errorpage/Errorpage.js","constants/colors.js","components/ContestArea/styled.js","assets/logo.svg","components/ContestArea/ContestArea.js","components/ResultArea/styled.js","components/ResultArea/ResultArea.js","pages/Homepage/styled.js","pages/Homepage/Homepage.js","routes/Router.js","App.js","index.js"],"names":["GlobalStateContext","React","createContext","BASE_URL","useRequestData","url","initialState","useState","data","setData","getData","useCallback","includes","axios","get","then","res","catch","useEffect","GlobalState","props","loteryId","setLoteryId","result","setResult","loteryGames","loteryContests","contestId","concursoId","id","setState","Provider","value","children","Errorpage","MEGA","RESULT","Main","styled","div","TitleArea","Title","h2","Select","select","Description","Text","p","ContestInput","useContext","formatedDate","moment","format","onChange","e","Number","target","map","lotery","nome","toUpperCase","src","logo","alt","Container","SortedNumber","ResultContainer","Warning","WarningContainer","ContestResult","numeros","number","LeftSide","Border","RightSide","SpinnerContainer","StyledSpinner","svg","Homepage","ContestArea","ResultArea","viewBox","className","cx","cy","r","fill","strokeWidth","Router","exact","path","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1f259642.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst GlobalStateContext = React.createContext()\r\n\r\nexport default GlobalStateContext","export const BASE_URL = \"https://brainn-api-loterias.herokuapp.com/api/v1\";\r\n","import { useEffect, useState, useCallback } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst useRequestData = (url, initialState) => {\r\n  const [data, setData] = useState(initialState);\r\n\r\n  const getData = useCallback(() => {\r\n    if (!url.includes(\"undefined\")) {\r\n      axios\r\n        .get(url)\r\n        .then((res) => {\r\n          setData(res.data);\r\n        })\r\n        .catch(() => {\r\n          setData(false);\r\n        });\r\n    }\r\n  }, [url]);\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [getData, url]);\r\n\r\n  return { data, getData };\r\n};\r\n\r\nexport default useRequestData;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport GlobalStateContext from \"./GlobalStateContext\";\r\nimport { BASE_URL } from \"../constants/urls\";\r\nimport useRequestData from \"../hooks/useRequestData\";\r\nimport { getContestResult } from \"../services/getContestResult\";\r\n\r\nconst GlobalState = (props) => {\r\n  const [loteryId, setLoteryId] = useState(0);\r\n  const [result, setResult] = useState();\r\n  const { data: loteryGames } = useRequestData(`${BASE_URL}/loterias`, []);\r\n\r\n  const { data: loteryContests } = useRequestData(\r\n    `${BASE_URL}/loterias-concursos`,\r\n    []\r\n  );\r\n\r\n  const contestId =\r\n    loteryContests[loteryId] && loteryContests[loteryId].concursoId;\r\n\r\n  useEffect(() => {\r\n    if (contestId) {\r\n      getContestResult(contestId, setResult);\r\n    }\r\n  }, [contestId]);\r\n\r\n  const data = { result, loteryId, loteryGames, setLoteryId };\r\n\r\n  return (\r\n    <GlobalStateContext.Provider value={data}>\r\n      {props.children}\r\n    </GlobalStateContext.Provider>\r\n  );\r\n};\r\n\r\nexport default GlobalState;\r\n","import axios from \"axios\";\r\nimport { BASE_URL } from \"../constants/urls\";\r\n\r\nexport const getContestResult = (id, setState) => {\r\n  axios\r\n    .get(`${BASE_URL}/concursos/${id}`)\r\n    .then((res) => {\r\n      setState(res.data);\r\n    })\r\n    .catch(() => {\r\n      setState(false);\r\n    });\r\n};\r\n","import React from \"react\";\r\n\r\nconst Errorpage = () => {\r\n\r\n    return (\r\n        <div>\r\n            Erro\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Errorpage","export const MEGA = \"#6befa3\"\r\nexport const QUINA = \"#8666ef\"\r\nexport const LOTOF = \"#dd7ac6\"\r\nexport const LOTOM = \"#ffab64\"\r\nexport const TIME = \"#5aad7d\"\r\nexport const DIA = \"#bfaf83\"\r\nexport const RESULT = \"#efefef\"","import styled from \"styled-components\";\r\nimport { DIA, LOTOF, LOTOM, MEGA, QUINA, TIME } from \"../../constants/colors\";\r\n\r\nexport const Main = styled.div`\r\n  height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  align-items: flex-start;\r\n  padding-left: 4vw;\r\n  background-color: ${(props) => {\r\n    switch (props.loteryId) {\r\n      case 0:\r\n        return MEGA;\r\n      case 1:\r\n        return QUINA;\r\n      case 2:\r\n        return LOTOF;\r\n      case 3:\r\n        return LOTOM;\r\n      case 4:\r\n        return TIME;\r\n      case 5:\r\n        return DIA;\r\n      default:\r\n        return;\r\n    }\r\n  }};\r\n  @media screen and (max-width: 426px) {\r\n    transform: rotate(360deg);\r\n    width: 100vw;\r\n    height: 55vh;\r\n    padding: 0;\r\n    align-items: center;\r\n  }\r\n`;\r\nexport const TitleArea = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  width: fit-content;\r\n  max-width: 75%;\r\n`;\r\n\r\nexport const Title = styled.h2`\r\n  color: white;\r\n  font-family: \"Montserrat\", sans-serif;\r\n  margin-left: 1vw;\r\n`;\r\n\r\nexport const Select = styled.select`\r\n  font-family: \"Montserrat\", sans-serif;\r\n  font-weight: \"400\";\r\n  border: none;\r\n  height: 25px;\r\n  border-radius: 5px;\r\n  margin-top: 10vh;\r\n  @media screen and (max-width: 426px) {\r\n    -webkit-transform: translateZ(0px);\r\n    -moz-transform: translateZ(0px);\r\n    transform: translateZ(0px);\r\n  }\r\n`;\r\n\r\nexport const Description = styled.div`\r\n  color: white;\r\n  font-family: \"Montserrat\", sans-serif;\r\n  padding-bottom: 3vh;\r\n  @media screen and (max-width: 426px) {\r\n    padding-bottom: 7vh;\r\n  }\r\n`;\r\nexport const Text = styled.p`\r\n  font-weight: bold;\r\n`;\r\n","export default __webpack_public_path__ + \"static/media/logo.4fd24b1c.svg\";","import React, { useContext } from \"react\";\r\nimport GlobalStateContext from \"../../global/GlobalStateContext\";\r\nimport { Description, Main, Select, Text, Title, TitleArea } from \"./styled\";\r\nimport logo from \"../../assets/logo.svg\";\r\nimport moment from \"moment\";\r\n\r\n\r\nconst ContestInput = () => {\r\n  const { result, loteryId, loteryGames, setLoteryId } =\r\n    useContext(GlobalStateContext);\r\n\r\n  const formatedDate =\r\n    result && moment(result.data, \"YYYY-MM-DD\").format(\"DD/MM/YYYY\");\r\n  const renderOptions = () => {\r\n    return (\r\n      loteryGames &&\r\n      loteryGames.map((lotery) => {\r\n        return (\r\n          <option key={lotery.id} value={lotery.id}>\r\n            {lotery.nome.toUpperCase()}\r\n          </option>\r\n        );\r\n      })\r\n    );\r\n  };\r\n\r\n  const renderTitle = () => {\r\n    return (\r\n      loteryGames &&\r\n      loteryGames.map((lotery) => {\r\n        if (lotery.id === loteryId) {\r\n          return (\r\n            <TitleArea key={lotery.id}>\r\n              <img src={logo} alt=\"logo\" />\r\n              <Title>{lotery.nome.toUpperCase()}</Title>\r\n            </TitleArea>\r\n          );\r\n        }\r\n        return false;\r\n      })\r\n    );\r\n  };\r\n\r\n  const renderDetails = () => {\r\n    return (\r\n      result && (\r\n        <Description>\r\n          <p>CONCURSO</p>\r\n          <Text>\r\n            {result.id} - {formatedDate}\r\n          </Text>\r\n        </Description>\r\n      )\r\n    );\r\n  };\r\n  const onChangeGame = (e) => {\r\n    setLoteryId(Number(e.target.value));\r\n  };\r\n\r\n  return (\r\n    <Main loteryId={loteryId}>\r\n      <Select onChange={onChangeGame}>{renderOptions()}</Select>\r\n      {renderTitle()}\r\n      {renderDetails()}\r\n    </Main>\r\n    \r\n  );\r\n};\r\n\r\nexport default ContestInput;\r\n\r\n","import styled from \"styled-components\";\r\nimport { RESULT } from \"../../constants/colors\";\r\n\r\nexport const Container = styled.div`\r\n  background-color: ${RESULT};\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  @media screen and (min-width: 426px) {\r\n    height: 100vh;\r\n    justify-content: center;\r\n  }\r\n\r\n  @media screen and (max-width: 426px) {\r\n    transform: rotate(360deg);\r\n    min-height: 45vh;\r\n    max-height: fit-content;\r\n    margin-top: 55vh;\r\n    position: absolute;\r\n    left: 0;\r\n    justify-content: space-between;\r\n  }\r\n`;\r\n\r\nexport const SortedNumber = styled.div`\r\n  border-radius: 50%;\r\n  background-color: white;\r\n  width: 80px;\r\n  height: 80px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin: 1vh 1vw;\r\n  font-family: \"Montserrat\", sans-serif;\r\n  font-weight: bold;\r\n`;\r\n\r\nexport const ResultContainer = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  height: fit-content;\r\n  background-color: ${RESULT};\r\n`;\r\n\r\nexport const Warning = styled.p`\r\n  padding-right: 20vw;\r\n  padding-bottom: 5vh;\r\n  display: flex;\r\n  @media screen and (max-width: 426px) {\r\n    padding-bottom: 1vh;\r\n  }\r\n`;\r\n\r\nexport const WarningContainer = styled.div`\r\n  background-color: ${RESULT};\r\n  @media screen and (min-width: 426px) {\r\n    position: absolute;\r\n    bottom: 0;\r\n    right: 0;\r\n    max-width: 60%;\r\n  }\r\n`;\r\n","import React, { useContext } from \"react\";\r\nimport GlobalStateContext from \"../../global/GlobalStateContext\";\r\nimport { Container, ResultContainer, SortedNumber, Warning, WarningContainer\r\n} from \"./styled\";\r\n\r\nconst ContestResult = () => {\r\n  const { result } = useContext(GlobalStateContext);\r\n\r\n  const renderResult = () => {\r\n    return (\r\n      result &&\r\n      result.numeros &&\r\n      result.numeros.map((number) => {\r\n        return <SortedNumber key={number}> {number}</SortedNumber>;\r\n      })\r\n    );\r\n  };\r\n  return (\r\n    <Container>\r\n      <ResultContainer>{renderResult()}\r\n      </ResultContainer>\r\n      <WarningContainer>\r\n        <Warning>\r\n          Este sorteio é meramente ilustrativo e não possui nenhuma ligação com\r\n          a CAIXA\r\n        </Warning>\r\n      </WarningContainer>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ContestResult;\r\n","import styled from \"styled-components\";\r\nimport { MEGA, RESULT } from \"../../constants/colors\";\r\n\r\nexport const Main = styled.div`\r\n  display: flex;\r\n  min-height: 100vh;\r\n`;\r\n\r\nexport const LeftSide = styled.div`\r\n  width: 50vw;\r\n  @media screen and (max-width: 600px) {\r\n    width: 40vw;\r\n  }\r\n`;\r\n\r\nexport const Border = styled.div`\r\n  width: 10vw;\r\n  height: 100vh;\r\n  max-height: 100vh;\r\n  background-color: ${RESULT};\r\n  position: absolute;\r\n  left: 25vw;\r\n  border-top-left-radius: 50%;\r\n  border-bottom-left-radius: 50%;\r\n  @media screen and (max-width: 600px) {\r\n    width: 8vw;\r\n    left: 25vw;\r\n  }\r\n  @media screen and (max-width: 426px) {\r\n    border-bottom-right-radius: 50%;\r\n    border-bottom-left-radius: 50%;\r\n    border-top-left-radius: 0%;\r\n    transform: rotate(180deg);\r\n    width: 100vw;\r\n    height: 5vh;\r\n    position: absolute;\r\n    top: 50vh;\r\n    left: 0;\r\n  }\r\n`;\r\n\r\nexport const RightSide = styled.div`\r\n  width: 100vw;\r\n  z-index: 1;\r\n`;\r\n\r\nexport const SpinnerContainer = styled.div `\r\n  height: 100vh;\r\n  width: 100vw;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: ${RESULT};\r\n`\r\nexport const StyledSpinner = styled.svg`\r\n  animation: rotate 2s linear infinite;\r\n  position: absolute;\r\n  width: 90px;\r\n  height: 90px;\r\n  \r\n  & .path {\r\n    stroke: ${MEGA};\r\n    stroke-linecap: round;\r\n    animation: dash 1.5s ease-in-out infinite;\r\n  }\r\n  \r\n  @keyframes rotate {\r\n    100% {\r\n      transform: rotate(360deg);\r\n    }\r\n  }\r\n  @keyframes dash {\r\n    0% {\r\n      stroke-dasharray: 1, 150;\r\n      stroke-dashoffset: 0;\r\n    }\r\n    50% {\r\n      stroke-dasharray: 90, 150;\r\n      stroke-dashoffset: -35;\r\n    }\r\n    100% {\r\n      stroke-dasharray: 90, 150;\r\n      stroke-dashoffset: -124;\r\n    }\r\n  }\r\n`;\r\n","import React, { useContext } from \"react\";\r\nimport ContestArea from \"../../components/ContestArea/ContestArea\";\r\nimport ResultArea from \"../../components/ResultArea/ResultArea\";\r\nimport GlobalStateContext from \"../../global/GlobalStateContext\";\r\nimport {Border, LeftSide, Main, RightSide, SpinnerContainer, StyledSpinner,\r\n} from \"./styled\";\r\n\r\nconst Homepage = () => {\r\n  const { result, loteryGames } = useContext(GlobalStateContext);\r\n  return (\r\n    <div>\r\n      {(result && loteryGames) ? (\r\n        <Main>\r\n          <LeftSide>\r\n            <ContestArea />\r\n          </LeftSide>\r\n          <Border />\r\n          <RightSide>\r\n            <ResultArea />\r\n          </RightSide>\r\n        </Main>\r\n      ) : (\r\n        <SpinnerContainer>\r\n          <StyledSpinner viewBox=\"0 0 50 50\">\r\n            <circle\r\n              className=\"path\"\r\n              cx=\"25\"\r\n              cy=\"25\"\r\n              r=\"20\"\r\n              fill=\"none\"\r\n              strokeWidth=\"4\"\r\n            />\r\n          </StyledSpinner>\r\n        </SpinnerContainer>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Homepage;\r\n","import { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\nimport Errorpage from \"../pages/Errorpage/Errorpage\";\r\nimport Homepage from \"../pages/Homepage/Homepage\";\r\n\r\nconst Router = () => {\r\n  return (\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <Homepage />\r\n        </Route>\r\n\r\n        <Route>\r\n          <Errorpage />\r\n        </Route>\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default Router;\r\n","import React from \"react\";\r\nimport GlobalState from \"./global/GlobalState\";\r\nimport Router from \"./routes/Router\";\r\n\r\nfunction App() {\r\n  return (\r\n    <GlobalState>\r\n      <Router />\r\n    </GlobalState>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}